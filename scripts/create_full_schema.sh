#!/usr/bin/env bash

SCHEMA_FILES=()

# Automatically find all schema.sql files under internal directory
mapfile -t SCHEMA_FILES < <(find ./internal -type f -name "schema.sql")

OUTPUT_FILE="./internal/database/full_schema.sql"
SQLC_YAML="./sqlc.yaml"

# Clear and initialize the schema file
echo -e "-- Code generated by schema merge script. DO NOT EDIT.\n" > "$OUTPUT_FILE"

# Merge schema files
for SCHEMA in "${SCHEMA_FILES[@]}"; do
    cat "$SCHEMA" >> "$OUTPUT_FILE"
done

# Start generating sqlc.yaml
cat > "$SQLC_YAML" << 'EOF'
# Code generated by schema merge script. DO NOT EDIT.
version: "2"
sql:
EOF

# Find all directories containing queries.sql and generate config
find ./internal -maxdepth 2 -type f -name "queries.sql" | while read -r QUERY_FILE; do
    # Get the package directory name
    PACKAGE_DIR=$(dirname "$QUERY_FILE")
    PACKAGE_NAME=$(basename "$PACKAGE_DIR")

    # Append configuration for this package
    cat >> "$SQLC_YAML" << EOF
  - engine: "postgresql"
    queries: "$QUERY_FILE"
    schema: "internal/database/full_schema.sql"
    gen:
      go:
        package: "$PACKAGE_NAME"
        out: "$PACKAGE_DIR"
        sql_package: "pgx/v5"
        overrides:
          - db_type: "uuid"
            go_type:
              import: "github.com/google/uuid"
              type: "UUID"
EOF
done
